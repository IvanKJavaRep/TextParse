1. В книге написано в общих чертах структура паттерна синглетон. Но в интернете нашел нюансы про
многопоточность и ключевое слово final у переменной, содержащей этот единственный объект. 
Нужно ли это сейчас контролировать?
2. Паттерн абстрактная фабрика про то, чтобы в параметрах всегда передавать объект ролитель или
объект типа интерфейса, чтобы можно было просто обращаться к методам интерфейса и не лезть в каждую
конкретную реализацию?
3. В книге - паттерн билдер немного другой, чем в ломбок получается? В ломбок вложенный класс, а тут просто
разные наследники. В книге не применяется способо инициализации объекта через Object.ObjBuilder(....).build.
Хотелось бы вместе обсудить этот паттерн, потому что реализация ломбок стала понятной.
Чем пример патерна билдер отличается от абстарктной фабрики, если мы также оперируем абстрактным классом,
чтобы передовать всегда объект одного и того же типа в качестве параметров метода и можем вызвать 
один набор методов, прописанный в родительском классе?
4. Как формализовать отличия абстрактной фабрики от фабричного метода? У первой цель создавать разные 
объекты, такие что одна фабрика делает один объект. А фаьричный метод он гибкий для добавления новых исходов
к уже написанной функции, которая что-либо делает? Различия не особо улавливаю. И там, и там нам нужны новые виды
объектов и поэтому мы создаем ролительский класс + интерфейс

